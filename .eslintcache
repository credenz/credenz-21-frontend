[{"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\index.js":"1","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\App.js":"2","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\NavbarCustom.js":"3","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\CartContext.js":"4","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\Footer.js":"5","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\AboutUs.js":"6","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Profile.js":"7","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Home.js":"8","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Contact.js":"9","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\LoginRegister.js":"10","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Events.js":"11","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Terms.js":"12","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\staticInfo.js":"13","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\AboutCards.js":"14","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\Loader.js":"15","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\AboutSponsors.js":"16","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\EventCard3.js":"17","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\EventCard2.js":"18","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\axios\\API.js":"19","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\Animation\\Animate.js":"20","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\index.jsx":"21","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\axios\\instance.js":"22","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\loginForm.jsx":"23","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\signupForm.jsx":"24","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\PaymentForm.jsx":"25","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\common.jsx":"26","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\Step2.jsx":"27","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\accountContext.js":"28","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\Step1.jsx":"29","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\marginer\\index.jsx":"30","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\ForgetPasswordForm.jsx":"31"},{"size":209,"mtime":1648131709528,"results":"32","hashOfConfig":"33"},{"size":1940,"mtime":1648460828025,"results":"34","hashOfConfig":"33"},{"size":17985,"mtime":1648460828079,"results":"35","hashOfConfig":"33"},{"size":385,"mtime":1648460828075,"results":"36","hashOfConfig":"33"},{"size":1610,"mtime":1648131709419,"results":"37","hashOfConfig":"33"},{"size":2689,"mtime":1648460828093,"results":"38","hashOfConfig":"33"},{"size":13026,"mtime":1648460828107,"results":"39","hashOfConfig":"33"},{"size":2533,"mtime":1648460828102,"results":"40","hashOfConfig":"33"},{"size":10171,"mtime":1648460828096,"results":"41","hashOfConfig":"33"},{"size":1020,"mtime":1648462548802,"results":"42","hashOfConfig":"33"},{"size":31284,"mtime":1648460828099,"results":"43","hashOfConfig":"33"},{"size":39123,"mtime":1648131709433,"results":"44","hashOfConfig":"33"},{"size":22670,"mtime":1648460828133,"results":"45","hashOfConfig":"33"},{"size":4156,"mtime":1648460828059,"results":"46","hashOfConfig":"33"},{"size":546,"mtime":1648131709420,"results":"47","hashOfConfig":"33"},{"size":354,"mtime":1648131709415,"results":"48","hashOfConfig":"33"},{"size":1842,"mtime":1648131709419,"results":"49","hashOfConfig":"33"},{"size":1851,"mtime":1648131709418,"results":"50","hashOfConfig":"33"},{"size":1133,"mtime":1648460828110,"results":"51","hashOfConfig":"33"},{"size":1116,"mtime":1648460828062,"results":"52","hashOfConfig":"33"},{"size":7312,"mtime":1648462682149,"results":"53","hashOfConfig":"33"},{"size":387,"mtime":1648460828112,"results":"54","hashOfConfig":"33"},{"size":2740,"mtime":1648460828089,"results":"55","hashOfConfig":"33"},{"size":6836,"mtime":1648131709428,"results":"56","hashOfConfig":"33"},{"size":3699,"mtime":1648131709424,"results":"57","hashOfConfig":"33"},{"size":1528,"mtime":1648460828084,"results":"58","hashOfConfig":"33"},{"size":1934,"mtime":1648131709425,"results":"59","hashOfConfig":"33"},{"size":90,"mtime":1648131709426,"results":"60","hashOfConfig":"33"},{"size":25472,"mtime":1648131709425,"results":"61","hashOfConfig":"33"},{"size":653,"mtime":1648131709428,"results":"62","hashOfConfig":"33"},{"size":4279,"mtime":1648131709424,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"84o12o",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\index.js",[],["132","133"],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\App.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\NavbarCustom.js",["134","135","136"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Modal, Nav, Navbar } from \"react-bootstrap\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { API } from \"../axios/API\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../CSS/navbar.css\";\r\nimport DownArrow from \"../images/arrow-down-sign-to-navigate.png\";\r\nimport deleteIcon from \"../images/bin.png\";\r\nimport BPlan from \"../images/bplan.png\";\r\nimport Clash from \"../images/clash.png\";\r\nimport Cretronix from \"../images/cretronix.png\";\r\nimport Datawiz from \"../images/datawiz.png\";\r\nimport Enigma from \"../images/enigma.png\";\r\nimport IEEELOGO from \"../images/ieeelogo.png\";\r\nimport NTH from \"../images/nth.png\";\r\nimport Paper from \"../images/paper.png\";\r\nimport PISBLOGO from \"../images/pisb.png\";\r\nimport Pixelate from \"../images/pixelate.png\";\r\nimport Quiz from \"../images/quiz.png\";\r\nimport RC from \"../images/rc.png\";\r\nimport CartIcon from \"../images/shopping-cart.png\";\r\nimport ProfileIcon from \"../images/user.png\";\r\nimport Wallstreet from \"../images/wallstreet.png\";\r\nimport Webweaver from \"../images/web.png\";\r\nimport CartContext from \"./CartContext\";\r\nconst NavbarCustom = (props) => {\r\n  const location = useLocation();\r\n  console.log(\"Locaton\", location.pathname);\r\n  const [page, setPage] = useState(location.pathname);\r\n  const cartContextValue = useContext(CartContext);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const [paymentDone, setPaymentDone] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const loadScript = (src) => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  };\r\n\r\n  const iconHelpr = (name) => {\r\n    switch (name) {\r\n      case \"RC\":\r\n        return RC;\r\n      case \"BPlan\":\r\n        return BPlan;\r\n      case \"Clash\":\r\n        return Clash;\r\n      case \"Cretronix\":\r\n        return Cretronix;\r\n      case \"Datawiz\":\r\n        return Datawiz;\r\n      case \"Enigma\":\r\n        return Enigma;\r\n      case \"NTH\":\r\n        return NTH;\r\n      case \"Paper\":\r\n        return Paper;\r\n      case \"Pixelate\":\r\n        return Pixelate;\r\n      case \"Quiz\":\r\n        return Quiz;\r\n      case \"Wallstreet\":\r\n        return Wallstreet;\r\n      case \"Webweaver\":\r\n        return Webweaver;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const checkPayment = async () => {\r\n    let token = localStorage.getItem(\"credenz_access_token\");\r\n    let username = localStorage.getItem(\"credenz_username\");\r\n    if (token) {\r\n      API.getUserDetails(username)\r\n        .then((res) => {\r\n          setUserDetails(res.data);\r\n          setIsLoggedIn(true);\r\n          if (res.data.payment === \"PO\") {\r\n            setPaymentDone(false);\r\n            // show payment button - Handeled ✔\r\n          } else if (res.data.payment === \"CO\") {\r\n            setPaymentDone(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const checkLoggedIn = () => {\r\n    let token = localStorage.getItem(\"credenz_access_token\");\r\n    let username = localStorage.getItem(\"credenz_username\");\r\n    if (token) {\r\n      API.getUserDetails(username)\r\n        .then((res) => {\r\n          setUserDetails(res.data);\r\n          // console.log(\"User Details\", res.data);\r\n          fetchUserDetails(res.data.user_id);\r\n          setIsLoggedIn(true);\r\n        })\r\n        .catch((err) => {\r\n          swal(\"Invalid token, please log out and sign in again\");\r\n          console.error(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const fetchUserDetails = async (id) => {\r\n    try {\r\n      const { data } = await API.getUserById(id);\r\n      cartContextValue.setUserDetails(data);\r\n      // console.log(\"User Details by ID\", data);\r\n      setUserDetails(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const EventNameHelpr = (event) => {\r\n    switch (event) {\r\n      case \"RC\":\r\n        return \"Reverse Coding\";\r\n      case \"BPlan\":\r\n        return \"Business Plan\";\r\n      case \"Clash\":\r\n        return \"Clash\";\r\n      case \"Cretronix\":\r\n        return \"Cretronix\";\r\n      case \"Datawiz\":\r\n        return \"Datawiz\";\r\n      case \"Enigma\":\r\n        return \"Enigma\";\r\n      case \"NTH\":\r\n        return \"Network Treasure Hunt\";\r\n      case \"Paper\":\r\n        return \"Paper Presentation\";\r\n      case \"Pixelate\":\r\n        return \"Pixelate\";\r\n      case \"Quiz\":\r\n        return \"Quiz\";\r\n      case \"Wallstreet\":\r\n        return \"Wallstreet\";\r\n      case \"Webweaver\":\r\n        return \"Webweaver\";\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handlePaymentSuccess = async (response) => {\r\n    try {\r\n      let bodyData = new FormData();\r\n\r\n      // we will send the response we've got from razorpay to the backend to validate the payment\r\n      bodyData.append(\"response\", JSON.stringify(response));\r\n\r\n      API.verifyPayment(bodyData)\r\n        .then((res) => {\r\n          //RESET THE LOCAL STATE\r\n          //   history.push(\"/\", { userDetails });\r\n          swal(\"Payment Successful\", \"\", \"success\");\r\n          // setTimeout(() => {\r\n          //   // eslint-disable-next-line no-restricted-globals\r\n          //   location.reload();\r\n          // }, 1600);\r\n          //   window.open(\"/events\", \"_self\");\r\n        })\r\n        .catch((err) => {\r\n          alert(`Payment failed!`);\r\n        });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const displayRazorpay = async () => {\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      // alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      swal(\"Razorpay SDK failed to load. Are you online?\", \"\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let { data: orderData } = await API.payment({\r\n        username: userDetails.username,\r\n        amount: cartContextValue.cart\r\n          .map((item) => item.price)\r\n          .reduce((a, b) => a + b, 0),\r\n        pass: cartContextValue.cart.length === 0 ? true : false,\r\n        events: cartContextValue.cart.map((item) => EventNameHelpr(item.name)),\r\n      });\r\n      const options = {\r\n        key: \"rzp_test_jIVmcYuQhbIa7k\", // Enter the Key ID generated from the Dashboard\r\n        amount: orderData.payment.amount_due.toString(),\r\n        currency: orderData.payment.currency,\r\n        name: \"Credenz Live 2.0 Payment\",\r\n        description: \"Test Transaction\",\r\n        order_id: orderData.payment.id,\r\n        handler: async function (response) {\r\n          handlePaymentSuccess(response);\r\n        },\r\n        prefill: {\r\n          name: userDetails.username || \"\",\r\n          email: userDetails.email || \"\",\r\n          contact: userDetails.profile.phone_no || \"\",\r\n        },\r\n        theme: {\r\n          color: \"#61dafb\",\r\n        },\r\n      };\r\n\r\n      const paymentObject = new window.Razorpay(options);\r\n      paymentObject.open();\r\n    } catch (error) {\r\n      console.error(\"Error\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // checkPayment();\r\n    checkLoggedIn();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleShowModal = () => cartContextValue.setCartModal(true);\r\n  const handleCloseModal = () => cartContextValue.setCartModal(false);\r\n\r\n  const handleShowMenu = () => setShowMenu(!showMenu);\r\n\r\n  const deleteEventHandler = (name) => {\r\n    console.log(\"Delete name -> \", name);\r\n    let cartItems = cartContextValue.cart;\r\n    cartItems = cartContextValue.cart.filter((item) => {\r\n      return item.name !== name;\r\n    });\r\n\r\n    console.log(\"All items after delete ->\", cartItems);\r\n\r\n    cartContextValue.setCart(cartItems);\r\n  };\r\n\r\n  const CartBody = (props) => {\r\n    return (\r\n      <Card className=\"event-card\">\r\n        <Card.Body className=\"d-flex row card-body\">\r\n          <div\r\n            className=\"deleteIconContainer\"\r\n            onClick={() => deleteEventHandler(props.name)}>\r\n            <img src={deleteIcon} alt=\"Delete icon\" className=\"deleteIcon\" />\r\n          </div>\r\n          <>\r\n            <div className=\"col-md-3 d-flex justify-content-center\">\r\n              <img\r\n                src={iconHelpr(props.name)}\r\n                alt=\"Event logo\"\r\n                className=\"event-logo\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"col-md-6 d-flex justify-content-center\"\r\n              style={{ flexDirection: \"column\" }}>\r\n              <h3>{props.name}</h3>\r\n              <p>{props.tagline}</p>\r\n            </div>\r\n            <div className=\"col-md-3 d-flex justify-content-center align-items-center\">\r\n              <h3>&#8377; {props.price}</h3>\r\n            </div>\r\n          </>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const ProfileMenu = () => {\r\n    return (\r\n      <div className=\"menuPosition\">\r\n        <Card>\r\n          <Card.Body style={{ backgroundColor: \"#000\" }}>\r\n            <NavLink\r\n              to=\"/profile\"\r\n              onClick={() => {\r\n                setPage(\"\");\r\n                handleShowMenu();\r\n              }}\r\n              className=\"menu-item\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                textDecoration: \"none\",\r\n                color: \"#fff\",\r\n              }}>\r\n              My Profile\r\n            </NavLink>\r\n            <div\r\n              className=\"divider\"\r\n              style={{\r\n                height: \"1px\",\r\n                width: \"100%\",\r\n                backgroundColor: \"#fff\",\r\n                marginBottom: 10,\r\n                marginTop: 10,\r\n              }}\r\n            />\r\n            <NavLink\r\n              to={`/`}\r\n              className=\"menu-item\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                textDecoration: \"none\",\r\n                color: \"#fff\",\r\n              }}\r\n              onClick={() => {\r\n                localStorage.removeItem(\"credenz_access_token\");\r\n                localStorage.removeItem(\"credenz_username\");\r\n                swal(\"Logged out successfully!\", \"\", \"success\");\r\n                setTimeout(() => {\r\n                  window.location.reload();\r\n                }, 1500);\r\n              }}>\r\n              Logout\r\n            </NavLink>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        variant=\"dark\"\r\n        className={\r\n          props.relative\r\n            ? \"navbar-wrapper position-relative bg-color-custom\"\r\n            : \"navbar-wrapper bg-color-custom\"\r\n        }\r\n        expand=\"md\">\r\n        <Navbar.Brand\r\n          href=\"https://pictieee.in\"\r\n          target=\"_blank\"\r\n          className=\"header-header\">\r\n          <img src={PISBLOGO} alt=\"pisblogo\" className=\"nav-logo ms-4\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"m-2\" />\r\n        <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\r\n          <Nav className=\"s-auto\" style={{ position: \"relative\" }}>\r\n            <NavLink\r\n              activeClassName=\"activeLink\"\r\n              to={`/`}\r\n              isActive={() => page === \"/\"}\r\n              className=\"header-title\"\r\n              onClick={() => {\r\n                setPage(\"/\");\r\n              }}>\r\n              {/* <TextSliced title=\"Home\" activeLink={page === \"/\"} /> */}\r\n              Home\r\n            </NavLink>\r\n            <NavLink\r\n              activeClassName=\"activeLink\"\r\n              // hidden={comingSoon || true}\r\n              to={`/events`}\r\n              isActive={() => page === \"/events\"}\r\n              className=\"header-title\"\r\n              onClick={() => {\r\n                setPage(\"/events\");\r\n              }}>\r\n              {/* <TextSliced title=\"Events\" activeLink={page === \"/events\"} /> */}\r\n              Events\r\n            </NavLink>\r\n            <NavLink\r\n              activeClassName=\"activeLink\"\r\n              to={`/about`}\r\n              isActive={() => page === \"/about\"}\r\n              className=\"header-title\"\r\n              onClick={() => {\r\n                setPage(\"/about\");\r\n              }}>\r\n              {/* <TextSliced\r\n                title=\"About\"\r\n                activeLink={page === \"/about\"}\r\n                page=\"About\"\r\n              /> */}\r\n              About\r\n            </NavLink>\r\n            <NavLink\r\n              activeClassName=\"activeLink\"\r\n              to={`/contact`}\r\n              isActive={() => page === \"/contact\"}\r\n              className=\"header-title\"\r\n              onClick={() => {\r\n                setPage(\"/contact\");\r\n              }}>\r\n              {/* <TextSliced\r\n                title=\"Contact\"\r\n                hidden\r\n                activeLink={page === \"/contact\"}\r\n                page=\"Contact\"\r\n              /> */}\r\n              Contact\r\n            </NavLink>\r\n            <NavLink\r\n              activeClassName=\"activeLink\"\r\n              to={`/login`}\r\n              isActive={() => page === \"/login\"}\r\n              onClick={() => {\r\n                setPage(\"/login\");\r\n              }}\r\n              className=\"header-title\"\r\n              hidden={isLoggedIn ? true : false}>\r\n              {/* <TextSliced\r\n                title={isLoggedIn ? (!paymentDone ? \"Pay Now\" : \"\") : \"Login\"}\r\n                activeLink={page === \"/login\"}\r\n              /> */}\r\n              Login\r\n            </NavLink>\r\n            {isLoggedIn && (\r\n              <>\r\n                <div\r\n                  className=\"d-flex align-items-center responsive-pos m-10\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={handleShowMenu}>\r\n                  <div className=\"profileIconContainer\">\r\n                    <img\r\n                      src={ProfileIcon}\r\n                      alt=\"Profile icon\"\r\n                      className=\"profileIcon\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"downArrowContainer\">\r\n                    <img\r\n                      src={DownArrow}\r\n                      alt=\"Down icon\"\r\n                      className=\"downArrow\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {showMenu && <ProfileMenu />}\r\n              </>\r\n            )}\r\n            {isLoggedIn && (\r\n              <>\r\n                <div className=\"cartIconContainer\" onClick={handleShowModal}>\r\n                  {cartContextValue.cart.length > 0 && (\r\n                    <div className=\"badgeContainer\">\r\n                      <p className=\"badge\">{cartContextValue.cart.length}</p>\r\n                    </div>\r\n                  )}\r\n                  <img src={CartIcon} alt=\"Cart icon\" className=\"cartIcon\" />\r\n                </div>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          <a href=\"https://www.ieee.org\" target=\"_blank\" rel=\"noreferrer\">\r\n            <img\r\n              src={IEEELOGO}\r\n              alt=\"iEEElogo\"\r\n              className=\"nav-logo logo-ieee me-3 ms-5\"\r\n            />\r\n          </a>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Modal\r\n        show={cartContextValue.cartModal}\r\n        onHide={handleCloseModal}\r\n        className=\"cartModal\"\r\n        scrollable>\r\n        <Modal.Header className=\"cartHeader\">\r\n          <Modal.Title className=\"cartTitle\">Checkout Cart</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"cartBody\">\r\n          {cartContextValue.cart.length > 0 ? (\r\n            cartContextValue.cart.map((item) => (\r\n              <CartBody\r\n                price={item.price}\r\n                name={item.name}\r\n                tagline={item.tagline}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <p style={{ color: \"#fff\", fontSize: 22 }}>No Items in Cart</p>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"cartFooter\">\r\n          {cartContextValue.cart.length > 0 ? (\r\n            <div style={{ width: \"100%\" }}>\r\n              <p\r\n                style={{\r\n                  color: \"#fff\",\r\n                  float: \"right\",\r\n                  fontSize: 25,\r\n                  marginRight: 20,\r\n                }}>\r\n                Total : &#8377;\r\n                {cartContextValue.cart\r\n                  .map((item) => item.price)\r\n                  .reduce((a, b) => a + b, 0)}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"row d-flex justify-content-between w-100\">\r\n            <button\r\n              onClick={() => {\r\n                cartContextValue.setCartModal(false);\r\n              }}\r\n              className=\"play-btn play-btn--light\">\r\n              <span className=\"play-btn__inner\">\r\n                <span className=\"play-btn__slide\"></span>\r\n                <span className=\"play-btn__content\">Close</span>\r\n              </span>\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                // cartContextValue.setCartModal(false);\r\n                displayRazorpay();\r\n              }}\r\n              disabled={cartContextValue.cart.length > 0 ? false : true}\r\n              className=\"play-btn play-btn--light\">\r\n              <span className=\"play-btn__inner play-btn__inner-green\">\r\n                <span className=\"play-btn__slide play-btn__slide-green\"></span>\r\n                <span className=\"play-btn__content\">Pay Now</span>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavbarCustom;\r\n","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\CartContext.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\Footer.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\AboutUs.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Profile.js",["137","138","139","140","141","142"],"import React, { useEffect, useState } from \"react\";\r\nimport Loader from \"../Components/Loader\";\r\nimport \"../CSS/profile.css\";\r\nimport ProfileIcon from \"../images/user.png\";\r\nimport CallIcon from \"../images/phone-receiver-silhouette.png\";\r\nimport SchoolIcon from \"../images/school.png\";\r\nimport EmailIcon from \"../images/email.png\";\r\nimport EventCard2 from \"../Components/EventCard2\";\r\nimport RC from \"../images/rc.png\";\r\nimport EventCard3 from \"../Components/EventCard3\";\r\nimport { API } from \"../axios/API\";\r\nimport { Modal, Tab, Tabs } from \"react-bootstrap\";\r\nimport BPlan from \"../images/bplan.png\";\r\nimport Clash from \"../images/clash.png\";\r\nimport Cross from \"../images/close-line.png\";\r\nimport Cretronix from \"../images/cretronix.png\";\r\nimport Datawiz from \"../images/datawiz.png\";\r\nimport Enigma from \"../images/enigma.png\";\r\nimport NTH from \"../images/nth.png\";\r\nimport CredenzLogo from \"../images/onlyLogo.png\";\r\nimport Paper from \"../images/paper.png\";\r\nimport Pixelate from \"../images/pixelate.png\";\r\nimport Quiz from \"../images/quiz.png\";\r\nimport Wallstreet from \"../images/wallstreet.png\";\r\nimport Webweaver from \"../images/web.png\";\r\nimport { eventDetails, events } from \"../staticInfo\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst Profile = (props) => {\r\n  const height = \"65px\";\r\n  const width = \"65px\";\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userDetails, setUserDetails] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [active, setActive] = useState(-1);\r\n  const [eventSelected, setEventSelected] = useState(-1);\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    email: \"\",\r\n    contact: \"\",\r\n    userName: \"\",\r\n    is_pass: false,\r\n    senior: false,\r\n    institute: \"\",\r\n    registeredEvents: [],\r\n  });\r\n\r\n  const iconHelpr = (e) => {\r\n    if (e === \"RC\") {\r\n      return RC;\r\n    } else if (e === \"Clash\") {\r\n      return Clash;\r\n    } else if (e === \"NTH\") {\r\n      return NTH;\r\n    } else if (e === \"Wallstreet\") {\r\n      return Wallstreet;\r\n    } else if (e === \"BPlan\") {\r\n      return BPlan;\r\n    } else if (e === \"Enigma\") {\r\n      return Enigma;\r\n    } else if (e === \"Datawiz\") {\r\n      return Datawiz;\r\n    } else if (e === \"Quiz\") {\r\n      return Quiz;\r\n    } else if (e === \"Paper\") {\r\n      return Paper;\r\n    } else if (e === \"Cretronix\") {\r\n      return Cretronix;\r\n    } else if (e === \"Pixelate\") {\r\n      return Pixelate;\r\n    } else if (e === \"Webweaver\") {\r\n      return Webweaver;\r\n    }\r\n  };\r\n\r\n  const titleHelpr = (e) => {\r\n    if (e === \"RC\") {\r\n      return \"Reverse Coding\";\r\n    } else if (e === \"Paper\") {\r\n      return \"Paper Presentation\";\r\n    } else return e;\r\n  };\r\n\r\n  const eventHelper = (eventName) => {\r\n    if (eventName === \"Reverse Coding\") {\r\n      return 0;\r\n    } else if (eventName === \"Clash\") {\r\n      return 1;\r\n    } else if (eventName === \"Network Treasure Hunt\") {\r\n      return 2;\r\n    } else if (eventName === \"WallStreet\") {\r\n      return 3;\r\n    } else if (eventName === \"B-Plan\") {\r\n      return 4;\r\n    } else if (eventName === \"Enigma\") {\r\n      return 5;\r\n    } else if (eventName === \"Datawiz\") {\r\n      return 6;\r\n    } else if (eventName === \"Quiz\") {\r\n      return 7;\r\n    } else if (eventName === \"Paper Presentation\") {\r\n      return 8;\r\n    } else if (eventName === \"Cretronix\") {\r\n      return 9;\r\n    } else if (eventName === \"Pixelate\") {\r\n      return 10;\r\n    } else if (eventName === \"Web Weaver\") {\r\n      return 11;\r\n    }\r\n  };\r\n\r\n  const fetchPaymentDetails = async () => {\r\n    let token = localStorage.getItem(\"credenz_access_token\");\r\n    let username = localStorage.getItem(\"credenz_username\");\r\n    if (token) {\r\n      await API.getUserDetails(username)\r\n        .then((res) => {\r\n          setUserDetails(res.data);\r\n          setIsLoggedIn(true);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const fetchProfileDetails = async () => {\r\n    let token = localStorage.getItem(\"credenz_access_token\");\r\n\r\n    if (token) {\r\n      await API.getProfile(token)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setProfileDetails({\r\n            ...profileDetails,\r\n            userName: res.data?.username,\r\n            email: res.data?.email,\r\n            contact: res.data?.phone_no,\r\n            senior: res.data?.senior,\r\n            is_pass: res.data?.is_pass,\r\n            institute: res.data?.institute,\r\n            registeredEvents: res.data?.events,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    } else {\r\n      swal(\"Not authenticated!\", \"\", \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchPaymentDetails();\r\n    fetchProfileDetails();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"d-flex justify-content-center align-items-center styleLoader\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"bg-dark2\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                  <div className=\"personalCardContainer\">\r\n                    <div className=\"personalCard\">\r\n                      <div className=\"userContainer my-5 flex-column d-flex justify-content-center align-items-center\">\r\n                        <div className=\"imgContainer\">\r\n                          <div className=\"initials\">\r\n                            {profileDetails.userName[0]}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"userName mt-4\">\r\n                          {profileDetails.userName}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"itemContainer\">\r\n                        <div className=\"itemRow\">\r\n                          <img\r\n                            src={EmailIcon}\r\n                            alt=\"Email icon\"\r\n                            style={{ marginRight: 10 }}\r\n                            className=\"commonIcon\"\r\n                          />\r\n                          <p className=\"detailText\" style={{ margin: 0 }}>\r\n                            {profileDetails.email}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"itemRow\">\r\n                          <img\r\n                            src={CallIcon}\r\n                            alt=\"Call icon\"\r\n                            style={{ marginRight: 10 }}\r\n                            className=\"commonIcon\"\r\n                          />\r\n                          <p className=\"detailText\" style={{ margin: 0 }}>\r\n                            {profileDetails.contact}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"itemRow\">\r\n                          <img\r\n                            src={SchoolIcon}\r\n                            alt=\"School icon\"\r\n                            style={{ marginRight: 10 }}\r\n                            className=\"commonIcon\"\r\n                          />\r\n                          <p className=\"detailText\" style={{ margin: 0 }}>\r\n                            {profileDetails.institute}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-8\">\r\n                  <div className=\"heading\">\r\n                    <h2>My Events</h2>\r\n                  </div>\r\n                  {profileDetails.registeredEvents.length > 0 ? (\r\n                    <div className=\"secondContainer\">\r\n                      <div className=\"row d-flex flex-row justify-content-evenly flex-wrap\">\r\n                        {profileDetails.registeredEvents.map((col, i) => (\r\n                          <span\r\n                            className=\"d-flex justify-content-center\"\r\n                            style={{ width: \"200px\" }}\r\n                            onClick={() => {\r\n                              setActive(eventHelper(col.eventName));\r\n                              setEventSelected(eventHelper(col.eventName));\r\n                              setShow(true);\r\n                            }}>\r\n                            <EventCard3\r\n                              icon={RC}\r\n                              width={width}\r\n                              height={height}\r\n                              title={col.eventName}\r\n                            />\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      className=\"m-5 d-flex justify-content-center align-items-center\"\r\n                      style={{ color: \"#fff\" }}>\r\n                      Not registered for any event\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Modal */}\r\n          <Modal\r\n            style={{ zIndex: 9999999 }}\r\n            centered\r\n            backdrop=\"static\"\r\n            show={show}\r\n            onHide={() => {\r\n              setShow(false);\r\n            }}\r\n            size=\"lg\">\r\n            <Modal.Header style={{ width: \"90%\" }}>\r\n              <Modal.Title\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}>\r\n                <img\r\n                  className=\"modal-logo-img1\"\r\n                  src={iconHelpr(events[active])}\r\n                  alt=\"Event Icon\"\r\n                  style={{\r\n                    color: \"white\",\r\n                    width: \"5rem\",\r\n                  }}\r\n                />\r\n                <div className=\"modal-icon-text1\">\r\n                  {titleHelpr(events[active])}\r\n                </div>\r\n                <div\r\n                  className=\"modal-close-wrapper1\"\r\n                  onClick={() => setShow(false)}>\r\n                  <img\r\n                    src={Cross}\r\n                    alt=\"close button\"\r\n                    className=\"modal-close-btn1\"\r\n                  />\r\n                </div>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body text>\r\n              <Tabs defaultActiveKey=\"info\" className=\"mb-3\">\r\n                <Tab\r\n                  eventKey=\"info\"\r\n                  title=\"Info\"\r\n                  className=\"modal-tab-link1\"\r\n                  color=\"#efefef\">\r\n                  <div className=\"info-wrapper1\">\r\n                    <p className=\"new-line1\">\r\n                      {eventSelected !== -1 && eventDetails[eventSelected].info}\r\n                    </p>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"rules\" title=\"Rules\" className=\"modal-tab-link1\">\r\n                  <div className=\"info-wrapper1\">\r\n                    <p className=\"new-line1\">\r\n                      {eventSelected !== -1 &&\r\n                        eventDetails[eventSelected].rules}\r\n                    </p>\r\n                  </div>\r\n                </Tab>\r\n                <Tab\r\n                  eventKey=\"structure\"\r\n                  title=\"Structure\"\r\n                  className=\"modal-tab-link1\">\r\n                  <div className=\"info-wrapper1\" style={{ maxHeight: \"30vh\" }}>\r\n                    <p className=\"new-line1\">\r\n                      {eventSelected !== -1 &&\r\n                        eventDetails[eventSelected].structure}\r\n                    </p>\r\n                  </div>\r\n                </Tab>\r\n                <Tab\r\n                  eventKey=\"judge\"\r\n                  title=\"Judging\"\r\n                  className=\"modal-tab-link1\">\r\n                  <div className=\"info-wrapper1\">\r\n                    <p className=\"new-line1\">\r\n                      {eventSelected !== -1 &&\r\n                        eventDetails[eventSelected].judging}\r\n                    </p>\r\n                  </div>\r\n                </Tab>\r\n                <Tab\r\n                  eventKey=\"contact\"\r\n                  title=\"Contact\"\r\n                  className=\"modal-tab-link1\">\r\n                  <div className=\"info-wrapper1\">\r\n                    <p className=\"new-line1\">\r\n                      {eventSelected !== -1 &&\r\n                        eventDetails[eventSelected].contact}\r\n                    </p>\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n              {/* <div className=\"play-button-modal\">\r\n          <PlayButton link=\"#\" />\r\n        </div> */}\r\n            </Modal.Body>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Home.js",["143","144","145","146","147"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../CSS/home.css\";\r\nimport HomeImage from \"../images/credenzlive2.0.png\";\r\n// import CyberBg from \"../vid/Bg_3_slow.webm\";\r\n// import CyberBg from \"../vid/future_1.webm\";\r\nimport CyberBg from \"../vid/future_2.webm\";\r\n// import CyberBg from \"../vid/future_3.webm\";\r\n// import CyberBg from '../vid/hexagon.webm'\r\n// import CyberBg from \"../vid/future_4.webm\";\r\nimport Loader from \"../Components/Loader\";\r\nimport NavbarCustom from \"../Components/NavbarCustom\";\r\nimport { Footer } from \"../Components/Footer\";\r\nimport Animate from \"../Components/Animation/Animate\";\r\n\r\nconst Home = () => {\r\n  const [logoVisible, setLogoVisible] = useState(false);\r\n  const [bgVisible, setBgVisible] = useState(false);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [preVideoEnd, setPreVideoEnd] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLogoVisible(true);\r\n    }, 1300);\r\n    setTimeout(() => setBgVisible(true), 600);\r\n    setTimeout(() => {\r\n      setPreVideoEnd(true);\r\n    }, 4500);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"d-flex justify-content-center align-items-center styleLoader\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* <NavbarCustom /> */}\r\n          <div className=\"section-home height-full-home o-x-hide\">\r\n            <div className=\"video-container\">\r\n              {/* <NavbarCustom comingSoon={true} /> */}\r\n              {/* <video\r\n          muted\r\n          autoPlay\r\n          className={preVideoEnd ? \"fade-out\" : \"pre-video\"}\r\n        >\r\n          <source src={CircleFuture} type=\"video/mp4\" />\r\n        </video> */}\r\n              {/* <video\r\n                className={bgVisible ? \"videoTag fade-in-image\" : \"no-video\"}\r\n                autoPlay\r\n                loop\r\n                muted>\r\n                <source src={CyberBg} type=\"video/webm\" />\r\n              </video> */}\r\n              <div\r\n                className={\r\n                  logoVisible ? \"fade-in-delayed credenz-logo\" : \"d-none\"\r\n                }\r\n              >\r\n                {/* <img src={HomeImage} alt=\"credenzLive\" className=\"logo-img\" /> */}\r\n                <Animate />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Contact.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\LoginRegister.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Events.js",["148","149"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Image, Modal, Tab, Tabs } from \"react-bootstrap\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport EventCard2 from \"../Components/EventCard2\";\r\nimport Loader from \"../Components/Loader\";\r\nimport \"../CSS/events.css\";\r\nimport \"../CSS/playButton.css\";\r\nimport BPlan from \"../images/bplan.png\";\r\nimport Clash from \"../images/clash.png\";\r\nimport Cross from \"../images/close-line.png\";\r\nimport Cretronix from \"../images/cretronix.png\";\r\nimport Datawiz from \"../images/datawiz.png\";\r\nimport Enigma from \"../images/enigma.png\";\r\nimport NTH from \"../images/nth.png\";\r\nimport CredenzLogo from \"../images/onlyLogo.png\";\r\nimport Paper from \"../images/paper.png\";\r\nimport Pixelate from \"../images/pixelate.png\";\r\nimport Quiz from \"../images/quiz.png\";\r\nimport RC from \"../images/rc.png\";\r\nimport Wallstreet from \"../images/wallstreet.png\";\r\nimport Webweaver from \"../images/web.png\";\r\nimport { eventDetails, events, cartItems } from \"../staticInfo.js\";\r\nimport CartContext from \"../Components/CartContext\";\r\nimport swal from \"sweetalert\";\r\nimport { API } from \"../axios/API\";\r\n// import GridBg from \"../vid/mesh.webm\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"row\" style={{ height: \"100%\" }}>\r\n      <div\r\n        className=\"col-md-4 d-flex justify-content-end\"\r\n        style={{ height: \"100%\" }}>\r\n        <Image src={CredenzLogo} className=\"logo-events\" />\r\n      </div>\r\n      <div\r\n        className=\"col-md-8 d-flex justify-content-center align-items-center\"\r\n        style={{ height: \"100%\" }}>\r\n        <p className=\"credenz-text-main\">CREDENZ LIVE 2.0</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Events = () => {\r\n  const cartContextValue = useContext(CartContext);\r\n  const [cart, setCart] = useState([]);\r\n  const [cartModal, setCartModal] = useState(false);\r\n  const ptop = \"50px\";\r\n  const height = \"65px\";\r\n  const width = \"65px\";\r\n  const [active, setActive] = useState(-1);\r\n  const [show, setShow] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [bgColor, setBgColor] = useState(0);\r\n\r\n  const fetchProfile = async () => {\r\n    let token = localStorage.getItem(\"credenz_access_token\");\r\n    let username = localStorage.getItem(\"credenz_username\");\r\n    if (token) {\r\n      API.getUserDetails(username)\r\n        .then((res) => {\r\n          setIsLoggedIn(true);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const titleHelpr = (e) => {\r\n    if (e === \"RC\") {\r\n      return \"Reverse Coding\";\r\n    } else if (e === \"Paper\") {\r\n      return \"Paper Presentation\";\r\n    } else return e;\r\n  };\r\n\r\n  function cartHelpr(eventCode) {\r\n    switch (eventCode) {\r\n      case 0:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[0]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 1:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[1]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 2:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[2]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 3:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[3]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 4:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[4]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 5:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[5]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 6:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[6]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 7:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[7]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 8:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[8]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 9:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[9]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 10:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[10]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      case 11:\r\n        cartContextValue.setCart([...cartContextValue.cart, cartItems[11]]);\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartContextValue.cart));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function PlayButton(props) {\r\n    console.log(\r\n      \"Context values:\",\r\n\r\n      cartContextValue.cart.map((item) => item.name)\r\n    );\r\n    cartContextValue.cart.forEach((item) => console.log(item));\r\n    return (\r\n      <div className=\"play-btn-wrapper\">\r\n        <button\r\n          onClick={() => {\r\n            if (!isLoggedIn) {\r\n              //proceed to cart -> open cart modal\r\n              console.log(\"Open cart modal\");\r\n              swal(`You need to login first!`, \"\", \"warning\");\r\n            } else {\r\n              cartHelpr(props.eventSelected);\r\n              setCart([...cart, cartItems[props.eventSelected]]);\r\n              swal(`Event added successfully!`, \"\", \"success\");\r\n            }\r\n          }}\r\n          disabled={\r\n            cartContextValue.cart\r\n              .map((item) => item.name)\r\n              .includes(events[props.eventSelected])\r\n              ? true\r\n              : false\r\n          }\r\n          className=\"play-btn play-btn--light\">\r\n          <span\r\n            style={{\r\n              backgroundColor: cartContextValue.cart\r\n                .map((item) => item.name)\r\n                .includes(events[props.eventSelected])\r\n                ? \"#e01949\"\r\n                : \"transparent\",\r\n            }}\r\n            className=\"play-btn__inner\">\r\n            <span className=\"play-btn__slide\"></span>\r\n            <span className=\"play-btn__content\">\r\n              {cartContextValue.cart\r\n                .map((item) => item.name)\r\n                .includes(events[props.eventSelected])\r\n                ? \"Added to cart\"\r\n                : \"Add to cart\"}\r\n            </span>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  function SubmitButton(props) {\r\n    return (\r\n      <div className=\"play-btn-wrapper\">\r\n        <button\r\n          className=\"play-btn play-btn--light\"\r\n          onClick={() => {\r\n            cartContextValue.setCartModal(!cartContextValue.cartModal);\r\n          }}>\r\n          <span className=\"play-btn__inner play-btn__inner-green\">\r\n            <span className=\"play-btn__slide play-btn__slide-green\"></span>\r\n            <span className=\"play-btn__content\">Checkout</span>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const [eventSelected, setEventSelected] = useState(-1);\r\n  const [mainText, setMainText] = useState(eventDetails[0].info);\r\n  const [mainHeading, setMainHeading] = useState(titleHelpr(events[0]));\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const iconHelpr = (e) => {\r\n    if (e === \"RC\") {\r\n      return RC;\r\n    } else if (e === \"Clash\") {\r\n      return Clash;\r\n    } else if (e === \"NTH\") {\r\n      return NTH;\r\n    } else if (e === \"Wallstreet\") {\r\n      return Wallstreet;\r\n    } else if (e === \"BPlan\") {\r\n      return BPlan;\r\n    } else if (e === \"Enigma\") {\r\n      return Enigma;\r\n    } else if (e === \"Datawiz\") {\r\n      return Datawiz;\r\n    } else if (e === \"Quiz\") {\r\n      return Quiz;\r\n    } else if (e === \"Paper\") {\r\n      return Paper;\r\n    } else if (e === \"Cretronix\") {\r\n      return Cretronix;\r\n    } else if (e === \"Pixelate\") {\r\n      return Pixelate;\r\n    } else if (e === \"Webweaver\") {\r\n      return Webweaver;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchProfile();\r\n    setActive(-1);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1500);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const navigateHorizontal = (event) => {};\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"d-flex justify-content-center align-items-center styleLoader\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* <NavbarCustom /> */}\r\n          <div className=\"bg-dark section-events height-full o-x-hide-events\">\r\n            {/* <div className=\"video-container-events\">\r\n            <video className={\"events-video fade-in-image\"} autoPlay loop muted>\r\n              <source src={GridBg} type=\"video/webm\" />\r\n            </video>\r\n          </div> */}\r\n            {/* <NavbarCustom relative /> */}\r\n            {/* NEW GRID */}\r\n            <div\r\n              className=\"row ms-3 me-3 cards-wrapper\"\r\n              data-aos=\"fade-in\"\r\n              data-aos-duration=\"400\"\r\n              data-aos-easing=\"ease-in-sine\"\r\n              data-aos-offset=\"50\">\r\n              <div className=\"col-md-3 \">\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(0);\r\n                      setMainHeading(titleHelpr(events[0]));\r\n                      setMainText(eventDetails[0].info);\r\n                      setEventSelected(0);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={RC}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Reverse Coding\"\r\n                      text=\"Hone your problem-solving skills by decrypting complex questions\"\r\n                      active={\r\n                        0 === active || 0 === eventSelected ? true : false\r\n                      }\r\n                      bgColor={0 === bgColor ? true : false}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(1);\r\n                      setMainHeading(titleHelpr(events[1]));\r\n                      setMainText(eventDetails[1].info);\r\n                      setEventSelected(1);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Clash}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Clash\"\r\n                      text=\"Clash is based on Competitive Programming!\"\r\n                      active={\r\n                        1 === active || 1 === eventSelected ? true : false\r\n                      }\r\n                      bgColor={1 === bgColor ? true : false}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(2);\r\n                      setMainHeading(titleHelpr(events[2]));\r\n                      setMainText(eventDetails[2].info);\r\n                      setEventSelected(2);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={NTH}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"NTH\"\r\n                      text=\"Decrypt the clues to solve complex puzzles and race your way to finish at top!\"\r\n                      active={\r\n                        2 === active || 2 === eventSelected ? true : false\r\n                      }\r\n                      bgColor={2 === bgColor ? true : false}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(3);\r\n                      setMainHeading(titleHelpr(events[3]));\r\n                      setMainText(eventDetails[3].info);\r\n                      setEventSelected(3);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Wallstreet}\r\n                      width={\"50px\"}\r\n                      height={\"50px\"}\r\n                      title=\"WallStreet\"\r\n                      marginBottomImg=\"10%\"\r\n                      text=\"Get an insight on stock markets by Investing and trading virtual money!\"\r\n                      active={\r\n                        3 === active || 3 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(4);\r\n                      setMainHeading(titleHelpr(events[4]));\r\n                      setMainText(eventDetails[4].info);\r\n                      setEventSelected(4);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={BPlan}\r\n                      width={\"90px\"}\r\n                      height={\"90px\"}\r\n                      title=\"B-Plan\"\r\n                      text=\"Showcase your entrepreneurial skills by presenting innovative business plans to the world!\"\r\n                      active={\r\n                        4 === active || 4 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(5);\r\n                      setMainHeading(titleHelpr(events[5]));\r\n                      setMainText(eventDetails[5].info);\r\n                      setEventSelected(5);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Enigma}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Enigma\"\r\n                      text=\"Get ready to push your aptitude, logical reasoning skills limits by solving mind-boggling questions!\"\r\n                      active={\r\n                        5 === active || 5 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 \">\r\n                <div\r\n                  className=\"row justify-content-center\"\r\n                  style={{ height: \"50%\" }}>\r\n                  <div className=\"main-wrapper\">\r\n                    {eventSelected === -1 ? (\r\n                      <Logo />\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"main-heading\">{mainHeading}</div>\r\n                        <div className=\"main-text\">{mainText}</div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row hide-mobile\">\r\n                  {eventSelected === -1 ? null : (\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <PlayButton link=\"#\" eventSelected={eventSelected} />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <SubmitButton eventSelected={eventSelected} />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className={`d-flex justify-content-center row tab-group ${\r\n                    eventSelected === -1 ? \"d-none\" : \"\"\r\n                  }`}\r\n                  style={{ height: \"50%\", paddingTop: { ptop } }}>\r\n                  <div\r\n                    className={`d-flex justify-content-center row tab-group ${\r\n                      eventSelected === -1 ? \"d-none\" : \"\"\r\n                    }`}\r\n                    style={{ height: \"50%\", paddingTop: { ptop } }}>\r\n                    <div\r\n                      className=\"d-flex row justify-content-center\"\r\n                      style={{ height: \"40%\" }}>\r\n                      <div className=\"col-md-4 mb-2 d-flex justify-content-center\">\r\n                        <div\r\n                          className={`tabButton d-flex justify-content-center align-items-center ${\r\n                            activeTab === 0 ? \"activeTab\" : \"\"\r\n                          } `}\r\n                          color=\"warning\"\r\n                          rounded\r\n                          onClick={() => {\r\n                            if (eventSelected !== -1) {\r\n                              setMainText(eventDetails[eventSelected].info);\r\n                              setActiveTab(0);\r\n                            }\r\n                          }}\r\n                          onKeyPress={(e) => navigateHorizontal(e)}>\r\n                          Info\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4 mb-2 d-flex justify-content-center\">\r\n                        <div\r\n                          className={`tabButton d-flex justify-content-center align-items-center ${\r\n                            activeTab === 1 ? \"activeTab\" : \"\"\r\n                          } `}\r\n                          color=\"warning\"\r\n                          rounded\r\n                          onClick={() => {\r\n                            if (eventSelected !== -1) {\r\n                              setMainText(eventDetails[eventSelected].rules);\r\n                              setActiveTab(1);\r\n                            }\r\n                          }}>\r\n                          Rules\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4 mb-2 d-flex justify-content-center\">\r\n                        <div\r\n                          className={`tabButton d-flex justify-content-center align-items-center ${\r\n                            activeTab === 2 ? \"activeTab\" : \"\"\r\n                          } `}\r\n                          color=\"warning\"\r\n                          rounded\r\n                          onClick={() => {\r\n                            if (eventSelected !== -1) {\r\n                              setMainText(\r\n                                eventDetails[eventSelected].structure\r\n                              );\r\n                              setActiveTab(2);\r\n                            }\r\n                          }}>\r\n                          Structure\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-4 col-md-4 mb-2 d-flex justify-content-center\">\r\n                        <div\r\n                          className={`tabButton d-flex justify-content-center align-items-center ${\r\n                            activeTab === 3 ? \"activeTab\" : \"\"\r\n                          } `}\r\n                          color=\"warning\"\r\n                          rounded\r\n                          onClick={() => {\r\n                            if (eventSelected !== -1) {\r\n                              setMainText(eventDetails[eventSelected].judging);\r\n                              setActiveTab(3);\r\n                            }\r\n                          }}>\r\n                          Judging Criteria\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-4 col-md-4 mb-2 d-flex justify-content-center\">\r\n                        <div\r\n                          className={`tabButton d-flex justify-content-center align-items-center ${\r\n                            activeTab === 4 ? \"activeTab\" : \"\"\r\n                          } `}\r\n                          color=\"warning\"\r\n                          rounded\r\n                          onClick={() => {\r\n                            if (eventSelected !== -1) {\r\n                              setMainText(eventDetails[eventSelected].contact);\r\n                              setActiveTab(4);\r\n                            }\r\n                          }}>\r\n                          Contact\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row justify-content-center\"\r\n                      style={{ height: \"40%\" }}>\r\n                      <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"rectangle d-none\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-3 \">\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(6);\r\n                      setMainHeading(titleHelpr(events[6]));\r\n                      setMainText(eventDetails[6].info);\r\n                      setEventSelected(6);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Datawiz}\r\n                      width={\"50px\"}\r\n                      height={\"50px\"}\r\n                      title=\"Datawiz\"\r\n                      text=\"Test your Machine learning and data analytics skills before stepping into the world of Data Science!\"\r\n                      active={\r\n                        6 === active || 6 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(7);\r\n                      setMainHeading(titleHelpr(events[7]));\r\n                      setMainText(eventDetails[7].info);\r\n                      setEventSelected(7);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Quiz}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Quiz\"\r\n                      text=\"Test your knowledge across wide range of topics and get a chance to win some exciting prizes!\"\r\n                      active={\r\n                        7 === active || 7 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(8);\r\n                      setMainHeading(titleHelpr(events[8]));\r\n                      setMainText(eventDetails[8].info);\r\n                      setEventSelected(8);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Paper}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Paper Presentation\"\r\n                      text=\"Present technical research papers with advanced perspectives while honing your skills of research!\"\r\n                      active={\r\n                        8 === active || 8 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(9);\r\n                      setMainHeading(titleHelpr(events[9]));\r\n                      setMainText(eventDetails[9].info);\r\n                      setEventSelected(9);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Cretronix}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Cretronix\"\r\n                      text=\"Build and exhibit your own circuits by solving tech problems!\"\r\n                      active={\r\n                        9 === active || 9 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(10);\r\n                      setMainHeading(titleHelpr(events[10]));\r\n                      setMainText(eventDetails[10].info);\r\n                      setEventSelected(10);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Pixelate}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Pixelate\"\r\n                      text=\"Let your creativity fuse with thoughtful designs and artistic originality!\"\r\n                      active={\r\n                        10 === active || 10 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-6\"\r\n                    onClick={() => {\r\n                      setActive(11);\r\n                      setMainHeading(titleHelpr(events[11]));\r\n                      setMainText(eventDetails[11].info);\r\n                      setEventSelected(11);\r\n                      setShow(true);\r\n                      setActiveTab(0);\r\n                    }}>\r\n                    <EventCard2\r\n                      icon={Webweaver}\r\n                      width={width}\r\n                      height={height}\r\n                      title=\"Webweaver\"\r\n                      text=\"Build an aesthetic website to showcase your web development skills!\"\r\n                      active={\r\n                        11 === active || 11 === eventSelected ? true : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              style={{ zIndex: 1000 }}\r\n              centered\r\n              className=\"d-lg-none\"\r\n              backdrop=\"static\"\r\n              show={show}\r\n              onHide={() => {\r\n                setShow(false);\r\n              }}\r\n              size=\"lg\">\r\n              <Modal.Header style={{ width: \"90%\" }}>\r\n                <Modal.Title\r\n                  style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}>\r\n                  <img\r\n                    className=\"modal-logo-img\"\r\n                    src={iconHelpr(events[active])}\r\n                    alt=\"Event Icon\"\r\n                    style={{\r\n                      color: \"white\",\r\n                      width: \"5rem\",\r\n                    }}\r\n                  />\r\n                  <div className=\"modal-icon-text\">\r\n                    {titleHelpr(events[active])}\r\n                  </div>\r\n                  <div\r\n                    className=\"modal-close-wrapper\"\r\n                    onClick={() => setShow(false)}>\r\n                    <img\r\n                      src={Cross}\r\n                      alt=\"close button\"\r\n                      className=\"modal-close-btn\"\r\n                    />\r\n                  </div>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body text>\r\n                <Tabs defaultActiveKey=\"info\" className=\"mb-3\">\r\n                  <Tab\r\n                    eventKey=\"info\"\r\n                    title=\"Info\"\r\n                    className=\"modal-tab-link\"\r\n                    color=\"#efefef\">\r\n                    <div className=\"info-wrapper\">\r\n                      <p className=\"new-line\">\r\n                        {eventSelected !== -1 &&\r\n                          eventDetails[eventSelected].info}\r\n                      </p>\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab\r\n                    eventKey=\"rules\"\r\n                    title=\"Rules\"\r\n                    className=\"modal-tab-link\">\r\n                    <div className=\"info-wrapper\">\r\n                      <p className=\"new-line\">\r\n                        {eventSelected !== -1 &&\r\n                          eventDetails[eventSelected].rules}\r\n                      </p>\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab\r\n                    eventKey=\"structure\"\r\n                    title=\"Structure\"\r\n                    className=\"modal-tab-link\">\r\n                    <div className=\"info-wrapper\">\r\n                      <p className=\"new-line\">\r\n                        {eventSelected !== -1 &&\r\n                          eventDetails[eventSelected].structure}\r\n                      </p>\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab\r\n                    eventKey=\"judge\"\r\n                    title=\"Judging\"\r\n                    className=\"modal-tab-link\">\r\n                    <div className=\"info-wrapper\">\r\n                      <p className=\"new-line\">\r\n                        {eventSelected !== -1 &&\r\n                          eventDetails[eventSelected].judging}\r\n                      </p>\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab\r\n                    eventKey=\"contact\"\r\n                    title=\"Contact\"\r\n                    className=\"modal-tab-link\">\r\n                    <div className=\"info-wrapper\">\r\n                      <p className=\"new-line\">\r\n                        {eventSelected !== -1 &&\r\n                          eventDetails[eventSelected].contact}\r\n                      </p>\r\n                    </div>\r\n                  </Tab>\r\n                </Tabs>\r\n                <div className=\"play-button-modal\">\r\n                  <PlayButton link=\"#\" eventSelected={eventSelected} />\r\n                </div>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Pages\\Terms.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\staticInfo.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\AboutCards.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\Loader.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\AboutSponsors.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\EventCard3.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\EventCard2.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\axios\\API.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\Animation\\Animate.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\index.jsx",["150","151","152","153","154","155","156","157"],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\axios\\instance.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\loginForm.jsx",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\signupForm.jsx",["158","159"],"import React, { useContext, useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { API } from \"../../axios/API\";\r\nimport \"../../CSS/Login.css\";\r\nimport { Marginer } from \"../marginer\";\r\nimport { AccountContext } from \"./accountContext\";\r\nimport { BoldLink, BoxContainer, FormContainer, MutedLink } from \"./common\";\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\n\r\nexport function SignupForm(props) {\r\n  const { switchToSignin } = useContext(AccountContext);\r\n\r\n  const [step, setStep] = useState(0);\r\n\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [ccode, setCcode] = useState(\"91\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [passwd1, setPasswd1] = useState(\"\");\r\n  const [passwd2, setPasswd2] = useState(\"\");\r\n  const [isIeeeMember, setIsIeeeMember] = useState(false);\r\n  const [ieeeId, setIeeeId] = useState(\"\");\r\n  const [isPictian, setIsPictian] = useState(false);\r\n  const [college, setCollege] = useState(\"\");\r\n  const [enablePayment, setEnablePayment] = useState(false);\r\n  const [isSenior, setIsSenior] = useState(false);\r\n\r\n  const loadScript = (src) => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  };\r\n\r\n  const handlePaymentSuccess = async (response) => {\r\n    try {\r\n      let bodyData = new FormData();\r\n\r\n      // we will send the response we've got from razorpay to the backend to validate the payment\r\n      bodyData.append(\"response\", JSON.stringify(response));\r\n\r\n      API.verifyPayment(bodyData)\r\n        .then((res) => {\r\n          // eslint-disable-next-line no-restricted-globals\r\n          location.reload();\r\n          // alert(`Payment successful!`);\r\n          swal(\"Payment Successful!\", \"\", \"success\");\r\n          //RESET THE LOCAL STATE\r\n        })\r\n        .catch((err) => {});\r\n    } catch (error) {}\r\n  };\r\n\r\n  const displayRazorpay = async () => {\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let { data: orderData } = await API.payment({ username });\r\n      const options = {\r\n        key: \"rzp_test_jIVmcYuQhbIa7k\", // Enter the Key ID generated from the Dashboard\r\n        amount: orderData.payment.amount_due.toString(),\r\n        currency: orderData.payment.currency,\r\n        name: \"Credenz Live 2.0 Payment\",\r\n        description: \"Test Transaction\",\r\n        order_id: orderData.payment.id,\r\n        handler: async function (response) {\r\n          handlePaymentSuccess(response);\r\n        },\r\n        prefill: {\r\n          name: fname,\r\n          email: email,\r\n          contact: phone,\r\n        },\r\n        theme: {\r\n          color: \"#61dafb\",\r\n        },\r\n      };\r\n\r\n      const paymentObject = new window.Razorpay(options);\r\n      paymentObject.open();\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    props.setLoading(true);\r\n    API.registerUser({\r\n      fullname: fname + lname,\r\n      username: username,\r\n      password: passwd1,\r\n      email: email,\r\n      profile: {\r\n        phone_no: phone,\r\n        country_code: ccode,\r\n        ieee_member: isIeeeMember,\r\n        ieee_member_id: ieeeId || 0,\r\n        institute: isPictian ? \"PICT\" : college,\r\n        senior: isSenior,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setEnablePayment(true);\r\n        // alert(\r\n        //   \"You have been registered!, Pay using the Pay Now button or login later with the credentials to pay later.\"\r\n        // );\r\n        swal(\"You have been registered successfully!\", \"\", \"success\");\r\n        localStorage.setItem(\"credenz_username\", res.data.username);\r\n        props.setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        props.setLoading(false);\r\n        // alert(JSON.stringify(e.response.data));\r\n        swal(\"Error\", JSON.stringify(e.response.data), \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FormContainer>\r\n        {step === 0 && (\r\n          <Step1\r\n            lname={lname}\r\n            fname={fname}\r\n            username={username}\r\n            email={email}\r\n            ccode={ccode}\r\n            phone={phone}\r\n            passwd1={passwd1}\r\n            passwd2={passwd2}\r\n            setFname={setFname}\r\n            setLname={setLname}\r\n            setUsername={setUsername}\r\n            setEmail={setEmail}\r\n            setCcode={setCcode}\r\n            setPhone={setPhone}\r\n            setPasswd1={setPasswd1}\r\n            setPasswd2={setPasswd2}\r\n          />\r\n        )}\r\n        {step === 1 && (\r\n          <Step2\r\n            step={step}\r\n            setStep={setStep}\r\n            isIeeeMember={isIeeeMember}\r\n            ieeeId={ieeeId}\r\n            isPictian={isPictian}\r\n            college={college}\r\n            setIsIeeeMember={setIsIeeeMember}\r\n            setIeeeId={setIeeeId}\r\n            setIsPictian={setIsPictian}\r\n            setCollege={setCollege}\r\n            isSenior={isSenior}\r\n            setIsSenior={setIsSenior}\r\n          />\r\n        )}\r\n      </FormContainer>\r\n      <Marginer direction=\"vertical\" margin={30} />\r\n\r\n      {step === 1 && (\r\n        <>\r\n          <button\r\n            className=\"btn btn--secondary\"\r\n            type=\"submit\"\r\n            onClick={handleSignUp}\r\n          >\r\n            <span className=\"btn__content\">Sign Up</span>\r\n            <span className=\"btn__glitch\"></span>\r\n          </button>\r\n          {/* <button\r\n            className=\"btn btn--secondary\"\r\n            type=\"submit\"\r\n            onClick={displayRazorpay}\r\n            disabled={!enablePayment}>\r\n            <span className=\"btn__content\">Pay Now</span>\r\n            <span className=\"btn__glitch\"></span>\r\n          </button> */}\r\n        </>\r\n      )}\r\n\r\n      {step === 0 && (\r\n        <button className=\"btn btn--secondary\" type=\"submit\">\r\n          <span\r\n            className=\"btn__content\"\r\n            onClick={(e) => {\r\n              passwd1 === passwd2\r\n                ? setStep(1)\r\n                : swal(\"Error\", \"Passwords don't match!\", \"error\");\r\n            }}\r\n          >\r\n            Next\r\n          </span>\r\n          <span className=\"btn__glitch\"></span>\r\n        </button>\r\n      )}\r\n      <Marginer direction=\"vertical\" margin=\"1em\" />\r\n      <MutedLink className=\"mb-3\" style={{ cursor: \"pointer\" }}>\r\n        Already have an account?\r\n        <BoldLink onClick={switchToSignin}>Signin</BoldLink>\r\n      </MutedLink>\r\n    </BoxContainer>\r\n  );\r\n}\r\n","C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\PaymentForm.jsx",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\common.jsx",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\Step2.jsx",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\accountContext.js",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\Step1.jsx",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\marginer\\index.jsx",[],"C:\\Users\\abhis\\Desktop\\credenz-21-frontend\\src\\Components\\loginregister\\ForgetPasswordForm.jsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":34,"column":10,"nodeType":"166","messageId":"167","endLine":34,"endColumn":21},{"ruleId":"164","severity":1,"message":"168","line":37,"column":9,"nodeType":"166","messageId":"167","endLine":37,"endColumn":16},{"ruleId":"164","severity":1,"message":"169","line":84,"column":9,"nodeType":"166","messageId":"167","endLine":84,"endColumn":21},{"ruleId":"164","severity":1,"message":"170","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":19},{"ruleId":"164","severity":1,"message":"171","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":18},{"ruleId":"164","severity":1,"message":"172","line":20,"column":8,"nodeType":"166","messageId":"167","endLine":20,"endColumn":19},{"ruleId":"164","severity":1,"message":"173","line":34,"column":10,"nodeType":"166","messageId":"167","endLine":34,"endColumn":20},{"ruleId":"164","severity":1,"message":"174","line":35,"column":10,"nodeType":"166","messageId":"167","endLine":35,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":163,"column":6,"nodeType":"177","endLine":163,"endColumn":8,"suggestions":"178"},{"ruleId":"164","severity":1,"message":"179","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":17},{"ruleId":"164","severity":1,"message":"180","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"181","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":20},{"ruleId":"164","severity":1,"message":"182","line":12,"column":10,"nodeType":"166","messageId":"167","endLine":12,"endColumn":16},{"ruleId":"164","severity":1,"message":"183","line":17,"column":10,"nodeType":"166","messageId":"167","endLine":17,"endColumn":19},{"ruleId":"164","severity":1,"message":"184","line":49,"column":10,"nodeType":"166","messageId":"167","endLine":49,"endColumn":19},{"ruleId":"164","severity":1,"message":"185","line":49,"column":21,"nodeType":"166","messageId":"167","endLine":49,"endColumn":33},{"ruleId":"164","severity":1,"message":"186","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":19},{"ruleId":"164","severity":1,"message":"187","line":3,"column":21,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},{"ruleId":"164","severity":1,"message":"188","line":3,"column":28,"nodeType":"166","messageId":"167","endLine":3,"endColumn":33},{"ruleId":"164","severity":1,"message":"189","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":13},{"ruleId":"164","severity":1,"message":"190","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":19},{"ruleId":"164","severity":1,"message":"191","line":120,"column":10,"nodeType":"166","messageId":"167","endLine":120,"endColumn":26},{"ruleId":"164","severity":1,"message":"192","line":120,"column":28,"nodeType":"166","messageId":"167","endLine":120,"endColumn":47},{"ruleId":"164","severity":1,"message":"193","line":121,"column":23,"nodeType":"166","messageId":"167","endLine":121,"endColumn":37},{"ruleId":"164","severity":1,"message":"194","line":28,"column":10,"nodeType":"166","messageId":"167","endLine":28,"endColumn":23},{"ruleId":"164","severity":1,"message":"195","line":64,"column":9,"nodeType":"166","messageId":"167","endLine":64,"endColumn":24},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'paymentDone' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'checkPayment' is assigned a value but never used.","'ProfileIcon' is defined but never used.","'EventCard2' is defined but never used.","'CredenzLogo' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'userDetails' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProfileDetails'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'HomeImage' is defined but never used.","'CyberBg' is defined but never used.","'NavbarCustom' is defined but never used.","'Footer' is defined but never used.","'bgVisible' is assigned a value but never used.","'cartModal' is assigned a value but never used.","'setCartModal' is assigned a value but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'Toast' is defined but never used.","'API' is defined but never used.","'CredenzLive' is defined but never used.","'showPaymentToast' is assigned a value but never used.","'setShowPaymentToast' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","'enablePayment' is assigned a value but never used.","'displayRazorpay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [fetchProfileDetails]",{"range":"201","text":"202"},[4934,4936],"[fetchProfileDetails]"]